// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMSProject.Models;

#nullable disable

namespace SMSProject.Migrations
{
    [DbContext(typeof(SMSDB2Context))]
    [Migration("20230320124459_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SMSProject.Models.Admin", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SMSProject.Models.Course", b =>
                {
                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("courseDuration")
                        .HasColumnType("datetime2");

                    b.Property<float>("courseFee")
                        .HasColumnType("real");

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("courseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SMSProject.Models.Enrollment", b =>
                {
                    b.Property<int>("enrollmentID")
                        .HasColumnType("int");

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("enrollDate")
                        .HasColumnType("datetime2");

                    b.HasKey("enrollmentID");

                    b.HasIndex("courseID");

                    b.HasIndex("email");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("SMSProject.Models.Student", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("contact")
                        .HasColumnType("bigint");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("studName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("email");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SMSProject.Models.Enrollment", b =>
                {
                    b.HasOne("SMSProject.Models.Course", "Course")
                        .WithMany("enrollments")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMSProject.Models.Student", "Student")
                        .WithMany("enrollments")
                        .HasForeignKey("email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SMSProject.Models.Course", b =>
                {
                    b.Navigation("enrollments");
                });

            modelBuilder.Entity("SMSProject.Models.Student", b =>
                {
                    b.Navigation("enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
